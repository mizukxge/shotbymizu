// generate-images.js
// Run with: node generate-images.js
// Requires: npm install sharp fs-extra glob

import { glob } from "glob";
import sharp from "sharp";
import fs from "fs-extra";
import path from "path";

const SRC_DIR = "public/images";
const OUT_DIR = "public/optimized";
const DATA_FILE = "src/data/generatedImages.js";

// Sizes for responsive sets
const SIZES = [480, 768, 1200, 1600];

// Ensure output dir exists
await fs.ensureDir(OUT_DIR);

const files = await glob(`${SRC_DIR}/**/*.webp`);
console.log(`Found ${files.length} images.`);

let manifest = {};

for (const file of files) {
  const rel = path.relative(SRC_DIR, file); // e.g. Portrait/image-01.webp
  const name = rel.replace(/\\/g, "/"); // normalize slashes

  // Prepare output paths
  const baseName = path.basename(file, ".webp"); // image-01
  const dir = path.dirname(rel); // Portrait

  manifest[name] = [];

  for (const width of SIZES) {
    const outDir = path.join(OUT_DIR, dir);
    await fs.ensureDir(outDir);

    const outFile = path.join(outDir, `${baseName}-${width}.webp`);

    await sharp(file)
      .resize({ width, withoutEnlargement: true })
      .webp({ quality: 75 })
      .toFile(outFile);

    manifest[name].push({
      src: `/${outFile.replace(/\\/g, "/")}`,
      width,
    });

    console.log(`✓ Generated ${outFile}`);
  }
}

// Write manifest as ES module
const manifestContent = `// Auto-generated by generate-images.js
export const GENERATED_IMAGES = ${JSON.stringify(manifest, null, 2)};
`;

await fs.outputFile(DATA_FILE, manifestContent);
console.log(`\n✅ Wrote manifest to ${DATA_FILE}`);
